# Usar una base Debian/Ubuntu explícita y estable
FROM ubuntu:22.04
ARG TERRAFORM_VERSION="1.8.2"

ENV DEBIAN_FRONTEND=noninteractive

# Actualizar e instalar todas las dependencias de una vez
RUN apt-get update && apt-get install -y -qq --no-install-recommends \
    openjdk-17-jdk \
    maven \
    sudo \
    curl \
    wget \
    apt-transport-https \
    ca-certificates \
    gnupg \
    git \
    unzip \
    # Para el cliente Docker
    docker.io \
    # Para Python y pip (necesario para Locust)
    python3 \
    python3-pip \
    # Instalar lsb-release, que es una dependencia para Trivy
    lsb-release \
    # Para kubectl (descarga e instala)
    && echo "Installing kubectl..." \
    && curl -sLO "https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
    && install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl \
    && rm kubectl \
    # Para Minikube CLI (descarga e instala)
    && echo "Installing Minikube CLI..." \
    && curl -sLo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
    && install -o root -g root -m 0755 minikube /usr/local/bin/minikube \
    && rm minikube \
    # Configurar NodeSource para Node.js 18.x (o 16.x, 20.x, según prefieras, >=16)
    && echo "Setting up NodeSource repository for Node.js..." \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - \
    # NUEVO: Instalar Terraform (descarga, descomprime, instala)
    && echo "Installing Terraform..." \
    && wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    && unzip -o terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin/ \
    && rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
    # NUEVO: Instalar Trivy
    && echo "Installing Trivy..." \
    && wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | tee /usr/share/keyrings/trivy.gpg > /dev/null \
    && echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | tee -a /etc/apt/sources.list.d/trivy.list \
    && apt-get update \
    && apt-get install -y -qq trivy \
    # Instalar Node.js (esto también instalará npm)
    && echo "Installing Node.js..." \
    && apt-get install -y -qq nodejs \
    # Instalar Newman y htmlextra reporter globalmente usando npm
    && echo "Installing Newman and htmlextra reporter..." \
    && npm install -g newman newman-reporter-htmlextra \
    # Instalar Locust usando pip
    && echo "Installing Locust..." \
    && pip3 install locust \
    # Limpieza de apt y npm cache
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && npm cache clean --force

# Verificar instalaciones
RUN echo "Java version:" && java -version \
    && echo "Maven version:" && mvn -version \
    && echo "Docker version:" && docker --version \
    && echo "kubectl version:" && kubectl version --client \
    && echo "Minikube version:" && minikube version \
    && echo "Node.js version:" && node -v \
    && echo "npm version:" && npm -v \
    && echo "Newman version:" && newman -v \
    && echo "Python3 version:" && python3 --version \
    && echo "pip3 version:" && pip3 --version \
    && echo "Locust version:" && locust --version \
    && echo "Terraform version:" && terraform --version \
    && echo "Trivy version:" && trivy --version

# El ENTRYPOINT/CMD del contenedor 'tools' se anulará con 'sleep infinity' en el Jenkinsfile.